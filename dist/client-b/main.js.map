{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/empty/empty.component.ts","webpack:///./src/app/page1/page1.component.ts","webpack:///./src/app/page2/page2.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'client-b',\r\n  template: `\r\n  <div id=\"client-b\">\r\n    <div class=\"card\">\r\n      <div class=\"content\">\r\n        <a routerLink=\"client-b/page1\" queryParamsHandling=\"merge\">Passenger Search</a> | <a routerLink=\"client-b/page2\" queryParamsHandling=\"merge\">Details</a>\r\n      </div>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n`,\r\nstyles: [`\r\n  #client-b { border: navy dashed 5px; padding: 10px }\r\n`],\r\n})\r\nexport class AppComponent {\r\n  constructor(private route: ActivatedRoute) {\r\n    route.queryParams.subscribe(params => {\r\n      console.debug('params', params);\r\n    });\r\n\r\n    window.addEventListener('client-message', e => console.debug('client-message event', e));\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { Page1Component } from './page1/page1.component';\r\nimport { Page2Component } from './page2/page2.component';\r\n\r\nimport { RouterModule } from '@angular/router';\r\nimport { EmptyComponent } from './empty/empty.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot([\r\n      { path: '', pathMatch: 'full', redirectTo: 'client-b/page1'},\r\n      { path: 'client-b', children: [\r\n        { path: 'page1', component: Page1Component },\r\n        { path: 'page2', component: Page2Component },\r\n      ]},\r\n      { path: '**', component: EmptyComponent }\r\n    ], { useHash: true }),\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    Page1Component,\r\n    Page2Component,\r\n    EmptyComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n  ]\r\n})\r\nexport class AppModule { \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class EmptyComponent {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n  <div class=\"card\">\r\n\r\n  <div class=\"header\">\r\n      <h2 class=\"title\">Passenger Search</h2>\r\n  </div>\r\n  <div class=\"content\">\r\n  \r\n \r\n      <div class=\"form-group\">\r\n         <label>Title:</label>\r\n         <input name=\"to\" value=\"Mag.\" class=\"form-control\">\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n          <label>First Name:</label>\r\n          <input name=\"from\" value=\"Manu\" class=\"form-control\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n          <label>Last Name:</label>\r\n          <input name=\"to\" value=\"\" class=\"form-control\">\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n          <button \r\n              class=\"btn btn-default\">Search</button>\r\n  \r\n          </div>\r\n  \r\n  </div>\r\n  </div>\r\n  `\r\n})\r\nexport class Page1Component  {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n  <div class=\"card\">\r\n\r\n  <div class=\"header\">\r\n      <h2 class=\"title\">Details</h2>\r\n  </div>\r\n  <div class=\"content\">\r\n\r\n      <div class=\"row\">\r\n          <div class=\"col-md-9\">\r\n\r\n              <div class=\"form-group\">\r\n                  <label>Id:</label>\r\n                  <input name=\"from\" value=\"0001\" class=\"form-control\">\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                  <label>Title:</label>\r\n                  <input name=\"to\" value=\"Mag.\" class=\"form-control\">\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                  <label>First Name:</label>\r\n                  <input name=\"from\" value=\"Manu\" class=\"form-control\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                  <label>Last Name:</label>\r\n                  <input name=\"to\" value=\"\" class=\"form-control\">\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                  <button class=\"btn btn-default\">Search</button>\r\n\r\n              </div>\r\n              <client-a-widget></client-a-widget>\r\n          </div>\r\n      \r\n          <div class=\"col-md-3\">\r\n            <miles-card miles=\"400\"></miles-card>  \r\n            <p>&nbsp;</p>\r\n            <flight-basket flights='[{\"id\": 1, \"from\": \"Munich\", \"to\": \"Berlin\", \"date\": \"Today\"}, {\"id\": 1, \"from\": \"Berlin\", \"to\": \"Graz\", \"date\": \"Tomorrow\"}]'></flight-basket>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    `\r\n})\r\nexport class Page2Component {\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  standalone: true\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  // Let the host app decide about prod mode\r\n  // enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}